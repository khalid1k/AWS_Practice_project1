service: test-admin-3
frameworkVersion: '3'

provider: 
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: 'us-west-2'
  memorySize: 512
  timeout: 10

  environment:
    USERS_TABLE: usersTable-dev

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource: 
        - arn:aws:dynamodb:us-west-2:${aws:accountId}:table/usersTable-dev

plugins:
  - serverless-offline

functions:
  createUser:
    handler: functions/user/user.createUser
    description: "Creates a new user"
    events:
      - http:
          path: user
          method: post
          cors: true
  getUser:
    handler: functions/user/user.getUser
    events:
      - http:
          path: user/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  updateUser:
    handler: functions/user/user.updateUser
    events:
      - http:
          path: user/{id}
          method: put
          cors: true
          request:
            parameters:
              paths:
                id: true

  deleteUser:
    handler: functions/user/user.deleteUser
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable-dev
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST  # Use on-demand pricing (no need to set read/write capacity)
